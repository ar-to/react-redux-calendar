{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","Utils/ReminderClass.js","components/Reminder/index.js","containers/ReminderContainer.js","components/Calendar.js","containers/CalendarContainer.js","App.js","serviceWorker.js","Utils/MonthDataClass.js","reducers/calendar.js","reducers/reminders.js","store.js","index.js"],"names":["TEST","CURRENTMONTH","PREVMONTH","NEXTMONTH","ADDREMINDER","GETREMINDERS","EDITREMINDER","DELETEREMINDER","getReminders","month","type","actionTypes","payload","ReminderClass","id","date","text","arrayIndex","Object","classCallCheck","this","ColorPickStyles","popover","position","zIndex","cover","top","right","bottom","left","Welcome","props","_this","possibleConstructorReturn","getPrototypeOf","call","openInput","e","preventDefault","setState","openedInput","closeInput","openEditInput","reminder","openedEditInput","reminderToEdit","closeEditInput","addReminder","uuidv1","reminderPlaceholder","target","value","reminderObject","monthData","shortName","day","dayIndex","editReminder","state","dayReminders","find","index","remindersCopy","toConsumableArray","updateReminder","removeReminder","reminderToRemove","saveReminder","concat","handleChangeComplete","color","reminderColor","hex","handleClick","displayColorPicker","handleClose","renderReminderInput","react_default","a","createElement","className","htmlFor","rows","maxLength","onChange","placeholder","onClick","style","lib","onChangeComplete","renderReminderEditInput","remindersPerMonth","_this2","map","key","href","React","Component","ReminderContainer","connect","months","month_data","reminders","remindersForMonth","reminder_for_month","dispatch","actionsCreators","deleteReminder","event","Reminder","Cell","styled","div","_templateObject","CalendarClass","componentDidUpdate","fetchRemindersPerMonth","getPrevMonthOnClick","getNextMonthOnClick","textAlign","JSON","stringify","weekDays","width","startArray","visibility","daysArray","dayNumber","containers_ReminderContainer","CalendarContainer","currentMonthIndex","current_month","week_days","monthStartDay","getPrevMonth","getNextMonth","monthIndex","mapStateToProps","mapDispatchToProps","ownProps","objectSpread","Calendar","App","containers_CalendarContainer","Boolean","window","location","hostname","match","MonthDataClass","moment","format","year","daysInMonth","startMonth","startOf","startMonthDay","startMonthDayIndex","dayOfYear","weekStart","week","weekEnd","endOf","weekDay","weekday","monthStartDayShort","monthEndDay","monthEndDayShort","getDays","getStartDays","totalDays","array","object","dayName","push","startDay","INITIAL_STATE","test","getMonth","Moment","weekdays","when","active","prev","subtract","next","add","current","arguments","length","undefined","action","reminders_for_month","uuid","fetched","fetchReminderPerMonth","fetchedReminder","newO","assign","fetchReminder","stateRemindersCopy","allReducers","combineReducers","reducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d154255.chunk.js","sourcesContent":["\nexport const TEST = 'TEST';\n\nexport const CURRENTMONTH = 'CURRENTMONTH';\nexport const PREVMONTH = 'PREVMONTH';\nexport const NEXTMONTH = 'NEXTMONTH';\n\nexport const ADDREMINDER = 'ADDREMINDER';\nexport const GETREMINDERS = 'GETREMINDERS';\nexport const EDITREMINDER = 'EDITREMINDER';\nexport const DELETEREMINDER = 'DELETEREMINDER';","import * as actionTypes from './actionTypes';\n\nexport function test(text) {\n  return {\n    type: actionTypes.TEST,\n    payload: text\n  }\n}\n\nexport function currentMonth() {\n  return {\n    type: actionTypes.CURRENTMONTH,\n  }\n}\n\nexport function prevMonth(currentMonth) {\n  return {\n    type: actionTypes.PREVMONTH,\n    payload: currentMonth\n  }\n}\n\nexport function nextMonth(currentMonth) {\n  return {\n    type: actionTypes.NEXTMONTH,\n    payload: currentMonth\n  }\n}\n\nexport function addReminder(text) {\n  return {\n    type: actionTypes.ADDREMINDER,\n    payload: text\n  }\n}\n\nexport function getReminders(month) {\n  return {\n    type: actionTypes.GETREMINDERS,\n    payload: month\n  }\n}\n\nexport function editReminder(reminderObject) {\n  return {\n    type: actionTypes.EDITREMINDER,\n    payload: reminderObject\n  }\n}\n\nexport function deleteReminder(text) {\n  return {\n    type: actionTypes.DELETEREMINDER,\n    payload: text\n  }\n}","\n\nexport default class ReminderClass {\n  constructor(id, date, text, arrayIndex) {\n    this.date = date;\n    this.text = text;\n    this.arrayIndex = arrayIndex;\n    this.id = id;\n  }\n}","import React from 'react'\nimport ReminderClass from '../../Utils/ReminderClass';\nimport uuidv1 from 'uuid/v1';\nimport { BlockPicker } from 'react-color';\nimport './styles.css'\n\nconst ColorPickStyles = {\n  popover: {\n    position: 'absolute',\n    zIndex: '2',\n  },\n  cover: {\n    position: 'fixed',\n    top: '0px',\n    right: '0px',\n    bottom: '0px',\n    left: '0px',\n  }\n}\n\nexport default class Welcome extends React.Component {\n  constructor(props) {   \n    super(props);\n    this.state = {\n      openedInput: false,\n      openedEditInput: false,\n      dayReminders: [],\n      reminderToEdit: {},\n      reminderObject: {},\n      remindersPerMonth: '',\n      reminderColor: '',\n      reminderPlaceholder: '',\n      displayColorPicker: false\n    };\n  }\n\n  openInput = (e) => {\n    e.preventDefault();\n    this.setState({\n      openedInput: true\n    })\n  }\n\n  closeInput = (e) => {\n    e.preventDefault();\n    this.setState({\n      openedInput: false\n    })\n  }\n\n  openEditInput = (e, reminder) => {\n    e.preventDefault();\n    this.setState({\n      openedEditInput: true,\n      reminderToEdit: reminder\n    })\n  }\n\n  closeEditInput = (e) => {\n    e.preventDefault();\n    this.setState({\n      openedEditInput: false\n    })\n  }\n\n  addReminder = (e) => {\n    let id = uuidv1();\n    return this.setState({\n      reminderPlaceholder: e.target.value,\n      reminderObject: new ReminderClass(id, this.props.monthData.shortName, e.target.value, this.props.day.dayIndex),\n    })\n  }\n\n  editReminder = (e) => {\n    this.state.dayReminders.find((reminder, index) => {\n      if (reminder.id === this.state.reminderToEdit.id) {\n        let remindersCopy = [...this.state.dayReminders];\n        remindersCopy[index].text = e.target.value;\n\n        return this.setState({\n          reminderObject: remindersCopy,\n        })\n      }\n      return null;\n    })\n  }\n\n  updateReminder = (e) => {\n    this.props.editReminder(this.state.reminderToEdit)\n    return this.setState({\n      openedEditInput: false,\n    });\n  }\n\n  removeReminder = (e, reminderToRemove) => {\n    e.preventDefault();\n    this.state.dayReminders.find((reminder, index) => {\n      if (reminder.id === reminderToRemove.id) {\n        let remindersCopy = [...this.state.dayReminders];\n        remindersCopy[index] = {};\n        return this.setState({\n          dayReminders: remindersCopy\n        })\n      }\n      return null;\n    })\n  }\n\n  saveReminder = (e) => {\n    let payload = this.state.reminderObject;\n    this.props.addReminder(payload)\n\n    return this.setState({\n      openedInput: false,\n      dayReminders: [...this.state.dayReminders, payload],\n      reminderPlaceholder: ''\n    });\n  }\n\n  handleChangeComplete = (color) => {\n    this.setState({ reminderColor: color.hex });\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  renderReminderInput = () => {\n    if (this.state.openedInput) {\n      return (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleFormControlTextarea1\">Enter Text Below</label>\n            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" maxLength={30} onChange={this.addReminder} placeholder={this.state.reminderPlaceholder}></textarea>\n            <button onClick={this.handleClick}>Pick Color</button>\n            {this.state.displayColorPicker ? <div style={ColorPickStyles.popover}>\n              <div style={ColorPickStyles.cover} onClick={this.handleClose} />\n              <BlockPicker\n                color={this.state.reminderColor}\n                onChangeComplete={this.handleChangeComplete} />\n            </div> : null}\n            <button onClick={this.saveReminder}>save</button>\n            <button onClick={this.closeInput}>close</button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderReminderEditInput = () => {\n    if (this.state.openedEditInput) {\n      return (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleFormControlTextarea1\">Edit Text Below</label>\n            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" maxLength={30} onChange={this.editReminder} value={this.state.reminderToEdit.text}></textarea>\n            <button onClick={this.handleClick}>Pick Color</button>\n            {this.state.displayColorPicker ? <div style={ColorPickStyles.popover}>\n              <div style={ColorPickStyles.cover} onClick={this.handleClose} />\n              <BlockPicker\n                color={this.state.reminderColor}\n                onChangeComplete={this.handleChangeComplete} />\n            </div> : null}\n            <button onClick={this.updateReminder}>save</button>\n            <button onClick={this.closeEditInput}>close</button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.reminderPlaceholder ?\n          <p className=\"reminder--overflow\" style={{\n            color: this.state.reminderColor\n          }}>{this.state.reminderPlaceholder}</p> : null}\n        {this.state.dayReminders.map((reminder, index) => {\n          if (reminder.arrayIndex === this.props.day.dayIndex) {\n            return (\n              <div key={index}>\n                <p className=\"reminder--overflow\" style={{\n                  color: this.state.reminderColor\n                }}>{reminder.text}</p>\n                <a href='/' onClick={(e) => this.openEditInput(e, reminder)}>edit</a>/\n                <a href='/' onClick={(e) => this.removeReminder(e, reminder)}>remove</a>\n                <br />\n                {/* <code>\n                  {JSON.stringify(this.state.reminderObject)}\n                </code> */}\n              </div>\n            )\n          }\n          return null;\n        })}\n\n        <a href='/' onClick={this.openInput}>add</a>\n        {this.renderReminderInput()}\n        {this.renderReminderEditInput()}\n      </div>\n    );\n  }\n}","import { connect } from 'react-redux';\nimport * as actionsCreators from '../actions/actionCreators';\nimport Reminder from '../components/Reminder/index';\n\n\nconst mapStateToProps = state => {\n  return {\n    monthData: state.months.month_data,\n    reminders: state.reminders.reminder,\n    remindersForMonth: state.reminders.reminder_for_month,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addReminder: (reminderObject) => {\n      dispatch(actionsCreators.addReminder(reminderObject))\n    },\n    getReminders: (month) => {\n      dispatch(actionsCreators.getReminders(month))\n    },\n    editReminder: (reminderObject) => {\n      dispatch(actionsCreators.editReminder(reminderObject))\n    },\n    deleteReminder: (event, reminderObject) => {\n      dispatch(actionsCreators.deleteReminder(reminderObject))\n    }\n  }\n}\n\nconst ReminderContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Reminder)\n\nexport default ReminderContainer","import React from 'react'\nimport Reminder from '../containers/ReminderContainer';\nimport styled from 'styled-components'\n\nconst Cell = styled.div`\n  border: black 1px solid;\n`;\n\nexport default class CalendarClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      remindersForMonth: []\n    }\n  }\n\n  componentDidUpdate = () => {\n    this.props.fetchRemindersPerMonth();\n  }\n\n  render() {\n    return (\n      <main className=\"container\">\n        <h1>Calendar</h1>\n        <h2>{this.props.monthData.month}</h2>\n        <section className=\"row\">\n          <aside className=\"col-md-4\">\n            <button onClick={this.props.getPrevMonthOnClick}>prev</button>\n            <button onClick={this.props.getNextMonthOnClick}>next</button>\n            <br/>\n            <pre style={{ textAlign: 'left' }}>\n              {JSON.stringify(this.props.monthData, null, 2)}\n            </pre>\n\n          </aside>\n          <article className=\"col-md-8\">\n            {/* <Header/> */}\n            <div className=\"row\">\n              {this.props.weekDays.map((day, index) => {\n                return (\n                  <Cell key={index} style={{ width: '14%' }}>\n                    <div>{day}</div>\n                  </Cell>\n                )\n              })\n              }\n            </div>\n            {/* <Week/> */}\n            <div className=\"row\">\n              {this.props.monthData.startArray.map((day, index) => {\n                return (\n                  <Cell key={index} style={{ width: '14%' }}>\n                    <div style={{ visibility: 'hidden' }}>{day}</div>\n                  </Cell>\n                )\n              })\n              }\n              {this.props.monthData.daysArray.map((day, index) => {\n                return (\n                  <Cell key={index} style={{ width: '14%' }}>\n                    <div>{day.dayNumber}</div>\n                    <Reminder daysArray={this.props.monthData.daysArray} dayIndex={index} day={day} remindersForMonth={this.props.remindersForMonth}/>\n                  </Cell>\n                )\n              })\n              }\n            </div>\n          </article>\n        </section>\n      </main>\n    )\n  }\n}\n","import { connect } from 'react-redux';\nimport * as actionsCreators from '../actions/actionCreators'; \nimport Calendar from '../components/Calendar';\n\n\nconst mapStateToProps = state => {\n  return {\n    currentMonthIndex: state.months.current_month,\n    monthData: state.months.month_data,\n    weekDays: state.months.week_days, \n    monthStartDay: state.months.month_data.monthStartDay,\n    remindersForMonth: state.reminders.reminder_for_month,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPrevMonth: (event, index) => {\n      dispatch(actionsCreators.prevMonth(index))\n    },\n    getNextMonth: (event, index) => {\n      dispatch(actionsCreators.nextMonth(index))\n    },\n    getReminders: (monthIndex) => {\n      dispatch(actionsCreators.getReminders(monthIndex))\n    },\n  }\n}\n\nconst mergeProps = (mapStateToProps, mapDispatchToProps, ownProps) => {\n  return {\n    ...mapStateToProps,  // optional\n    ...mapDispatchToProps,  // optional\n    getPrevMonthOnClick: (event) => (\n      mapDispatchToProps.getPrevMonth(\n        event,\n        mapStateToProps.currentMonthIndex  // <<< here the magic happens\n      )\n    ),\n    getNextMonthOnClick: (event) => (\n      mapDispatchToProps.getNextMonth(\n        event,\n        mapStateToProps.currentMonthIndex  // <<< here the magic happens\n      )\n    ),\n    fetchRemindersPerMonth: () => (\n      mapDispatchToProps.getReminders(\n        mapStateToProps.currentMonthIndex  // <<< here the magic happens\n      )\n    ),\n  }\n}\n\nconst CalendarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Calendar)\n\nexport default CalendarContainer","import React, { Component } from 'react';\nimport Calendar from './containers/CalendarContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Calendar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport default class MonthDataClass {\n  constructor(moment) {\n    this.index = moment.month();\n    this.shortName = moment.format('MMM');\n    this.month = moment.format('MMMM');\n    this.year = moment.format('YYYY');\n    this.daysInMonth = moment.daysInMonth();\n    this.format = moment.format();\n    this.startMonth = moment.startOf('month');\n    this.startMonthDay = moment.startOf('month').date();\n    this.monthStartDay = moment.startOf('month').day();\n    this.startMonthDayIndex = moment.startOf('month').dayOfYear();\n\n    this.weekStart = moment.startOf('month').week()\n    this.weekEnd = moment.endOf('month').week()\n\n    this.weekDay = moment.weekday(5).format('ddd');\n    this.monthStartDayShort = moment.startOf('month').format('ddd');\n    this.monthEndDay = moment.endOf('month').day();\n    this.monthEndDayShort = moment.endOf('month').format('ddd');\n\n    this.daysArray = this.getDays(this.daysInMonth, this)\n    this.startArray = this.getStartDays(this.monthStartDay)\n  }\n\n  getDays(totalDays) {\n    let array = [];\n    let object = {};\n    let index = this.startMonthDayIndex;\n    for (let day = 1; day <= totalDays; day++) {\n      object = {\n        dayIndex: index++,\n        dayNumber: day,\n        dayName: this.shortName,\n        // reminders: [\n        //   {\n        //     uuid: \"04d46320-2f39-11e9-b590-579db90c6936\",\n        //     date: \"Feb\",\n        //     text: \"gg\",\n        //     dayIndex: 34\n        //   },\n        // ]\n      }\n      array.push(object);\n    }\n    return array;\n  }\n\n  getStartDays(startDay) {\n    let array = []\n    for (let day = 1; day <= startDay; day++) {\n      array.push(day);\n    }\n    return array;\n  }\n}","import * as actionTypes from '../actions/actionTypes';\nimport Moment from 'moment';\nimport MonthDataClass from '../Utils/MonthDataClass';\n\nconst INITIAL_STATE = {\n  test: '',\n  current_month: getMonth().index,\n  month_data: getMonth(),\n  week_days: Moment.weekdays(),\n};\n\n/**\n * Get Month Data\n * @param {Boolean} next \n * @return {Object}\n */\nfunction getMonth(when, index) {\n  const active = Moment().month(index);\n\n  switch (when) {\n    case 'PREVMONTH':\n      const prev = active.subtract(1, 'M');\n      return new MonthDataClass(prev);\n    case 'NEXTMONTH':\n      const next = active.add(1, 'M');\n      return new MonthDataClass(next);\n    default:\n      const current = Moment()\n      return new MonthDataClass(current);\n  }\n}\n\nexport function months(state = INITIAL_STATE, action) {\n  let monthData;\n  switch (action.type) {\n    case actionTypes.TEST:\n      return { ...state, test: action.payload }\n    case actionTypes.CURRENTMONTH:\n      return { ...state, month_data: getMonth(actionTypes.CURRENTMONTH) }\n    case actionTypes.PREVMONTH:\n      monthData = getMonth(actionTypes.PREVMONTH, action.payload);\n      return { ...state, current_month: monthData.index, month_data: monthData }\n    case actionTypes.NEXTMONTH:\n      monthData = getMonth(actionTypes.NEXTMONTH, action.payload);\n      return { ...state, current_month: monthData.index, month_data: monthData }\n    default:\n      return state;\n  }\n}","import * as actionTypes from '../actions/actionTypes';\nimport Moment from 'moment';\n\nconst INITIAL_STATE = {\n  reminder: [],\n  reminders_for_month: [],\n};\n\nfunction createReminder(payload) {\n  return {\n    uuid: payload.id,\n    date: payload.date,\n    text: payload.text,\n    dayIndex: payload.arrayIndex\n  }\n}\n\nfunction fetchReminder(state, payload) {\n  let newO = {};\n  state.reminder.find((reminder, index) => {\n    if (reminder.uuid === payload.id) {\n      newO = Object.assign({}, reminder, { index: index });\n      return newO;\n    }\n    return null;\n  })\n  return newO;\n}\n\nfunction fetchReminderPerMonth(state, month) {\n let array = [];\n  state.reminder.find((reminder, index) => {\n   if (reminder.date === month) {\n     return array.push(reminder);\n   }\n   return null;\n })\n return array;\n}\n\nexport function reminders(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case actionTypes.ADDREMINDER:\n      return { ...state, reminder: [...state.reminder, createReminder(action.payload)] }\n    case actionTypes.GETREMINDERS:\n      const month = Moment().month(action.payload).format('MMM');\n      let fetched = fetchReminderPerMonth(state, month);\n      return { ...state, reminders_for_month: fetched};\n    case actionTypes.EDITREMINDER:\n      let fetchedReminder = fetchReminder(state, action.payload);\n      let stateRemindersCopy = [...state.reminder];\n      stateRemindersCopy[fetchedReminder.index].text = action.payload.text\n      stateRemindersCopy[fetchedReminder.index].date = action.payload.date\n      return { ...state }\n    case actionTypes.DELETEREMINDER:\n      return { ...state, text: action.payload }\n    default:\n      return state;\n  }\n}\n","import { combineReducers, createStore } from '../../../Library/Caches/typescript/2.9/node_modules/redux'\nimport * as reducers from './reducers';\n\nconst allReducers = combineReducers(reducers)\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n/**\n * Redux\n */\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}