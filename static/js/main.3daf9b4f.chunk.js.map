{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","Utils/ReminderClass.js","components/Reminder/index.js","containers/ReminderContainer.js","components/Calendar.js","containers/CalendarContainer.js","App.js","serviceWorker.js","Utils/MonthDataClass.js","reducers/calendar.js","reducers/reminders.js","store.js","index.js"],"names":["TEST","CURRENTMONTH","PREVMONTH","NEXTMONTH","ADDREMINDER","GETREMINDERS","EDITREMINDER","DELETEREMINDER","getReminders","month","type","actionTypes","payload","ReminderClass","id","date","text","arrayIndex","reminderColor","Object","classCallCheck","this","ColorPickStyles","popover","position","zIndex","cover","top","right","bottom","left","Welcome","props","_this","possibleConstructorReturn","getPrototypeOf","call","openInput","e","preventDefault","setState","openedInput","closeInput","openEditInput","reminder","openedEditInput","reminderToEdit","closeEditInput","addReminder","uuidv1","reminderPlaceholder","target","value","reminderObject","monthData","shortName","day","dayIndex","state","editReminder","dayReminders","find","index","remindersCopy","toConsumableArray","updateReminder","payloadCopy","assign","removeReminder","reminderToRemove","saveReminder","concat","handleChangeComplete","color","hex","handleClick","displayColorPicker","handleClose","renderReminderInput","react_default","a","createElement","className","style","htmlFor","rows","maxLength","onChange","placeholder","onClick","lib","onChangeComplete","renderReminderEditInput","remindersPerMonth","_this2","map","key","href","React","Component","ReminderContainer","connect","months","month_data","reminders","remindersForMonth","reminder_for_month","dispatch","actionsCreators","deleteReminder","event","Reminder","Cell","styled","div","_templateObject","CalendarClass","componentDidUpdate","prevProps","length","downloadWarning","showDevJSON","year","react_csv","data","filename","getPrevMonthOnClick","getNextMonthOnClick","weekDays","width","startArray","visibility","daysArray","currentDay","dayNumber","containers_ReminderContainer","CalendarContainer","currentMonthIndex","current_month","week_days","monthStartDay","getPrevMonth","getNextMonth","monthIndex","mapStateToProps","mapDispatchToProps","ownProps","objectSpread","fetchRemindersPerMonth","Calendar","App","containers_CalendarContainer","Boolean","window","location","hostname","match","MonthDataClass","moment","momentCalendar","calendar","momentDay","format","daysInMonth","startOf","startMonthDayIndex","dayOfYear","getDays","getStartDays","totalDays","array","object","nowShortName","Moment","dayName","Number","push","startDay","INITIAL_STATE","test","getMonth","weekdays","when","active","prev","subtract","next","add","current","arguments","undefined","action","reminders_for_month","uuid","fetched","fetchReminderPerMonth","fetchedReminder","newO","fetchReminder","stateRemindersCopy","allReducers","combineReducers","reducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3daf9b4f.chunk.js","sourcesContent":["\nexport const TEST = 'TEST';\n\nexport const CURRENTMONTH = 'CURRENTMONTH';\nexport const PREVMONTH = 'PREVMONTH';\nexport const NEXTMONTH = 'NEXTMONTH';\n\nexport const ADDREMINDER = 'ADDREMINDER';\nexport const GETREMINDERS = 'GETREMINDERS';\nexport const EDITREMINDER = 'EDITREMINDER';\nexport const DELETEREMINDER = 'DELETEREMINDER';","import * as actionTypes from './actionTypes';\n\nexport function test(text) {\n  return {\n    type: actionTypes.TEST,\n    payload: text\n  }\n}\n\nexport function currentMonth() {\n  return {\n    type: actionTypes.CURRENTMONTH,\n  }\n}\n\nexport function prevMonth(currentMonth) {\n  return {\n    type: actionTypes.PREVMONTH,\n    payload: currentMonth\n  }\n}\n\nexport function nextMonth(currentMonth) {\n  return {\n    type: actionTypes.NEXTMONTH,\n    payload: currentMonth\n  }\n}\n\nexport function addReminder(text) {\n  return {\n    type: actionTypes.ADDREMINDER,\n    payload: text\n  }\n}\n\nexport function getReminders(month) {\n  return {\n    type: actionTypes.GETREMINDERS,\n    payload: month\n  }\n}\n\nexport function editReminder(reminderObject) {\n  return {\n    type: actionTypes.EDITREMINDER,\n    payload: reminderObject\n  }\n}\n\nexport function deleteReminder(text) {\n  return {\n    type: actionTypes.DELETEREMINDER,\n    payload: text\n  }\n}","\n\nexport default class ReminderClass {\n  constructor(id, date, text, arrayIndex, reminderColor) {\n    this.id = id;\n    this.date = date;\n    this.text = text;\n    this.arrayIndex = arrayIndex;\n    this.reminderColor = reminderColor;\n  }\n}","import React from 'react'\nimport ReminderClass from '../../Utils/ReminderClass';\nimport uuidv1 from 'uuid/v1';\nimport { BlockPicker } from 'react-color';\nimport './styles.css'\n\nconst ColorPickStyles = {\n  popover: {\n    position: 'absolute',\n    zIndex: '2',\n  },\n  cover: {\n    position: 'fixed',\n    top: '0px',\n    right: '0px',\n    bottom: '0px',\n    left: '0px',\n  }\n}\n\nexport default class Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openedInput: false,\n      openedEditInput: false,\n      dayReminders: [],\n      reminderToEdit: {},\n      reminderObject: {},\n      remindersPerMonth: '',\n      reminderColor: '',\n      reminderPlaceholder: '',\n      displayColorPicker: false\n    };\n  }\n\n  // componentDidUpdate = (prevProps, prevState) => {\n    /**\n     * Update warning that backup (download) has not been done\n     */\n    // if (this.props.reminders.reminder.length !== prevProps.reminders.reminder.length) {\n    //   this.setState({\n    //     downloadWarning: true\n    //   })\n    // }\n  // }\n\n  openInput = (e) => {\n    e.preventDefault();\n    this.setState({\n      openedInput: true\n    })\n  }\n\n  closeInput = (e) => {\n    e.preventDefault();\n    this.setState({\n      openedInput: false\n    })\n  }\n\n  openEditInput = (e, reminder) => {\n    e.preventDefault();\n    this.setState({\n      openedEditInput: true,\n      reminderToEdit: reminder\n    })\n  }\n\n  closeEditInput = (e) => {\n    e.preventDefault();\n    this.setState({\n      openedEditInput: false\n    })\n  }\n\n  addReminder = (e) => {\n    let id = uuidv1();\n    return this.setState({\n      reminderPlaceholder: e.target.value,\n      reminderObject: new ReminderClass(id, this.props.monthData.shortName, e.target.value, this.props.day.dayIndex, this.state.reminderColor),\n    })\n  }\n\n  editReminder = (e) => {\n    this.state.dayReminders.find((reminder, index) => {\n      if (reminder.id === this.state.reminderToEdit.id) {\n        let remindersCopy = [...this.state.dayReminders];\n        remindersCopy[index].text = e.target.value;\n        remindersCopy[index].reminderColor = this.state.reminderColor;\n\n        return this.setState({\n          reminderObject: remindersCopy,\n        })\n      }\n      return null;\n    })\n  }\n\n  updateReminder = (e) => {\n    let payload = this.state.reminderToEdit;\n    let payloadCopy = Object.assign({}, payload, { reminderColor: this.state.reminderColor })\n    this.props.editReminder(payloadCopy)\n\n    this.state.dayReminders.find((reminder, index) => {\n      if (reminder.id === this.state.reminderToEdit.id) {\n        let remindersCopy = [...this.state.dayReminders];\n        remindersCopy[index].text = this.state.reminderToEdit.text;\n        remindersCopy[index].reminderColor = this.state.reminderColor;\n\n        return this.setState({\n          // reminderObject: remindersCopy,\n          openedEditInput: false,\n        })\n      }\n      return null;\n    })\n  }\n\n  removeReminder = (e, reminderToRemove) => {\n    e.preventDefault();\n    this.state.dayReminders.find((reminder, index) => {\n      if (reminder.id === reminderToRemove.id) {\n        let remindersCopy = [...this.state.dayReminders];\n        remindersCopy[index] = {};\n        return this.setState({\n          dayReminders: remindersCopy\n        })\n      }\n      return null;\n    })\n  }\n\n  saveReminder = (e) => {\n    let payload = this.state.reminderObject;\n    let payloadCopy = Object.assign({}, payload, { reminderColor: this.state.reminderColor })\n    this.props.addReminder(payloadCopy)\n\n    return this.setState({\n      openedInput: false,\n      dayReminders: [...this.state.dayReminders, payloadCopy],\n      reminderPlaceholder: '',\n      reminderColor: ''\n    });\n  }\n\n  handleChangeComplete = (color) => {\n    this.setState({\n      reminderColor: color.hex\n    });\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  renderReminderInput = () => {\n    if (this.state.openedInput) {\n      return (\n        <div>\n          {this.state.reminderPlaceholder ?\n            <p className=\"reminder--overflow\" style={{\n              color: this.state.reminderColor\n            }}>{this.state.reminderPlaceholder}</p> : null}\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleFormControlTextarea1\">Enter Text Below</label>\n            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" maxLength={30} onChange={this.addReminder} placeholder={this.state.reminderPlaceholder}></textarea>\n            <button onClick={this.handleClick}>Pick Color</button>\n            {this.state.displayColorPicker ? <div style={ColorPickStyles.popover}>\n              <div style={ColorPickStyles.cover} onClick={this.handleClose} />\n              <BlockPicker\n                color={this.state.reminderColor}\n                onChangeComplete={this.handleChangeComplete} />\n            </div> : null}\n            <button onClick={this.saveReminder}>save</button>\n            <button onClick={this.closeInput}>close</button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderReminderEditInput = () => {\n    if (this.state.openedEditInput) {\n      return (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleFormControlTextarea1\">Edit Text Below</label>\n            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" maxLength={30} onChange={this.editReminder} value={this.state.reminderToEdit.text}></textarea>\n            <button onClick={this.handleClick}>Pick Color</button>\n            {this.state.displayColorPicker ? <div style={ColorPickStyles.popover}>\n              <div style={ColorPickStyles.cover} onClick={this.handleClose} />\n              <BlockPicker\n                color={this.state.reminderColor}\n                onChangeComplete={this.handleChangeComplete} />\n            </div> : null}\n            <button onClick={this.updateReminder}>save</button>\n            <button onClick={this.closeEditInput}>close</button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.dayReminders.map((reminder, index) => {\n          if (reminder.arrayIndex === this.props.day.dayIndex) {\n            return (\n              <div key={index}>\n                <p className=\"reminder--overflow\" style={{\n                  color: reminder.reminderColor\n                }}>{reminder.text}</p>\n                <a href='/' onClick={(e) => this.openEditInput(e, reminder)}>edit</a>/\n                <a href='/' onClick={(e) => this.removeReminder(e, reminder)}>remove</a>\n                <br />\n                {/* <code>\n                  {JSON.stringify(this.state.reminderObject)}\n                </code> */}\n              </div>\n            )\n          }\n          return null;\n        })}\n\n        <a href='/' onClick={this.openInput}>add</a>\n        {this.renderReminderInput()}\n        {this.renderReminderEditInput()}\n      </div>\n    );\n  }\n}","import { connect } from 'react-redux';\nimport * as actionsCreators from '../actions/actionCreators';\nimport Reminder from '../components/Reminder/index';\n\n\nconst mapStateToProps = state => {\n  return {\n    monthData: state.months.month_data,\n    reminders: state.reminders.reminder,\n    remindersForMonth: state.reminders.reminder_for_month,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addReminder: (reminderObject) => {\n      dispatch(actionsCreators.addReminder(reminderObject))\n    },\n    getReminders: (month) => {\n      dispatch(actionsCreators.getReminders(month))\n    },\n    editReminder: (reminderObject) => {\n      dispatch(actionsCreators.editReminder(reminderObject))\n    },\n    deleteReminder: (event, reminderObject) => {\n      dispatch(actionsCreators.deleteReminder(reminderObject))\n    }\n  }\n}\n\nconst ReminderContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Reminder)\n\nexport default ReminderContainer","import React from 'react'\nimport Reminder from '../containers/ReminderContainer';\nimport styled from 'styled-components'\nimport { CSVLink } from \"react-csv\";\n\nconst Cell = styled.div`\n  border: black 1px solid;\n`;\n\nexport default class CalendarClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      remindersForMonth: [],\n      downloadWarning: false\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    /**\n     * Update warning that backup (download) has not been done\n     */\n    if (this.props.reminders.reminder.length !== prevProps.reminders.reminder.length) {\n      this.setState({\n        downloadWarning: true\n      })\n    }\n  }\n\n  showDevJSON = () => {\n    if (process.env.NODE_ENV === 'development') {\n      return (\n        <pre style={{ textAlign: 'left' }}>\n          {JSON.stringify(this.props.monthData, null, 2)}\n        </pre>\n      )\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <main className=\"container\">\n        <h1>Calendar</h1>\n        <h2>{`${this.props.monthData.month}, ${this.props.monthData.year}`}</h2>\n        <CSVLink\n          data={this.props.reminders.reminder}\n          filename={\"reminders.csv\"}\n          className=\"btn btn-dark\"\n          target=\"_blank\"\n          onClick={() => {\n            this.setState({\n              downloadWarning: false\n            })\n          }}\n        >\n          reminders.cvs\n        </CSVLink>\n        {this.state.downloadWarning ? <p>You have not downloaded your reminders since your last change</p> : null}\n        <section className=\"row\">\n          <aside className=\"col-md-4\">\n            <br />\n            <button onClick={this.props.getPrevMonthOnClick}>prev</button>\n            <button onClick={this.props.getNextMonthOnClick}>next</button>\n            <hr />\n            {this.showDevJSON()}\n          </aside>\n          <article className=\"col-md-8\">\n            {/* <Header/> */}\n            <div className=\"row\">\n              {this.props.weekDays.map((day, index) => {\n                return (\n                  <Cell key={index} style={{ width: '14%' }}>\n                    <div>{day}</div>\n                  </Cell>\n                )\n              })\n              }\n            </div>\n            {/* <Week/> */}\n            <div className=\"row\">\n              {this.props.monthData.startArray.map((day, index) => {\n                return (\n                  <Cell key={index} style={{ width: '14%' }}>\n                    <div style={{ visibility: 'hidden' }}>{day}</div>\n                  </Cell>\n                )\n              })\n              }\n              {this.props.monthData.daysArray.map((day, index) => {\n                return (\n                  <Cell key={index} style={{ width: '14%' }}>\n                    <div style={day.currentDay ? { color: \"red\" } : null}>{day.dayNumber}</div>\n                    <Reminder daysArray={this.props.monthData.daysArray} dayIndex={index} day={day} remindersForMonth={this.props.remindersForMonth} />\n                  </Cell>\n                )\n              })\n              }\n            </div>\n          </article>\n        </section>\n      </main>\n    )\n  }\n}\n","import { connect } from 'react-redux';\nimport * as actionsCreators from '../actions/actionCreators'; \nimport Calendar from '../components/Calendar';\n\n\nconst mapStateToProps = state => {\n  return {\n    months: state.months,\n    reminders: state.reminders,\n    currentMonthIndex: state.months.current_month,\n    monthData: state.months.month_data,\n    weekDays: state.months.week_days, \n    monthStartDay: state.months.month_data.monthStartDay,\n    remindersForMonth: state.reminders.reminder_for_month,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPrevMonth: (event, index) => {\n      dispatch(actionsCreators.prevMonth(index))\n    },\n    getNextMonth: (event, index) => {\n      dispatch(actionsCreators.nextMonth(index))\n    },\n    getReminders: (monthIndex) => {\n      dispatch(actionsCreators.getReminders(monthIndex))\n    },\n  }\n}\n\nconst mergeProps = (mapStateToProps, mapDispatchToProps, ownProps) => {\n  return {\n    ...mapStateToProps,  // optional\n    ...mapDispatchToProps,  // optional\n    getPrevMonthOnClick: (event) => (\n      mapDispatchToProps.getPrevMonth(\n        event,\n        mapStateToProps.currentMonthIndex  // <<< here the magic happens\n      )\n    ),\n    getNextMonthOnClick: (event) => (\n      mapDispatchToProps.getNextMonth(\n        event,\n        mapStateToProps.currentMonthIndex  // <<< here the magic happens\n      )\n    ),\n    fetchRemindersPerMonth: () => (\n      mapDispatchToProps.getReminders(\n        mapStateToProps.currentMonthIndex  // <<< here the magic happens\n      )\n    ),\n  }\n}\n\nconst CalendarContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Calendar)\n\nexport default CalendarContainer","import React, { Component } from 'react';\nimport Calendar from './containers/CalendarContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Calendar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Moment from 'moment';\nexport default class MonthDataClass {\n  constructor(moment) {\n    this.moment = moment;\n    this.index = moment.month();\n    this.momentCalendar  = moment.calendar();\n    this.momentDay  = moment.format('D');\n    this.shortName = moment.format('MMM');\n    this.month = moment.format('MMMM');\n    this.year = moment.format('YYYY');\n    this.date = moment.format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\n    this.daysInMonth = moment.daysInMonth();\n    this.format = moment.format();\n    // this.startMonth = moment.startOf('month');\n    // this.startMonthDay = moment.startOf('month').date();\n    this.monthStartDay = moment.startOf('month').day();\n    this.startMonthDayIndex = moment.startOf('month').dayOfYear();\n\n    // this.weekStart = moment.startOf('month').week()\n    // this.weekEnd = moment.endOf('month').week()\n\n    // this.weekDay = moment.weekday(5).format('ddd');\n    // this.monthStartDayShort = moment.startOf('month').format('ddd');\n    // this.monthEndDay = moment.endOf('month').day();\n    // this.monthEndDayShort = moment.endOf('month').format('ddd');\n\n    this.daysArray = this.getDays(this.daysInMonth, this)\n    this.startArray = this.getStartDays(this.monthStartDay)\n  }\n\n  getDays(totalDays) {\n    let array = [];\n    let object = {};\n    let index = this.startMonthDayIndex;\n    let nowShortName = Moment().format('MMM');\n    for (let day = 1; day <= totalDays; day++) {\n      object = {\n        dayIndex: index++,\n        dayNumber: day,\n        dayName: this.shortName,\n        currentDay: Number(this.momentDay) === day && this.shortName === nowShortName\n        // reminders: [\n        //   {\n        //     uuid: \"04d46320-2f39-11e9-b590-579db90c6936\",\n        //     date: \"Feb\",\n        //     text: \"gg\",\n        //     dayIndex: 34\n        //   },\n        // ]\n      }\n      array.push(object);\n    }\n    return array;\n  }\n\n  getStartDays(startDay) {\n    let array = []\n    for (let day = 1; day <= startDay; day++) {\n      array.push(day);\n    }\n    return array;\n  }\n}","import * as actionTypes from '../actions/actionTypes';\nimport Moment from 'moment';\nimport MonthDataClass from '../Utils/MonthDataClass';\n\nconst INITIAL_STATE = {\n  test: '',\n  current_month: getMonth().index,\n  month_data: getMonth(),\n  week_days: Moment.weekdays(),\n};\n\n/**\n * Get Month Data\n * @param {Boolean} next \n * @return {Object}\n */\nfunction getMonth(when, index) {\n  let active;\n  if (index >= 0) {\n    active = Moment().month(index);\n  }\n\n  switch (when) {\n    case 'PREVMONTH':\n      const prev = active.subtract(1, 'M');\n      return new MonthDataClass(prev);\n    case 'NEXTMONTH':\n      const next = active.add(1, 'M');\n      return new MonthDataClass(next);\n    default:\n      const current = Moment()\n      return new MonthDataClass(current);\n  }\n}\n\nexport function months(state = INITIAL_STATE, action) {\n  let monthData;\n  switch (action.type) {\n    case actionTypes.TEST:\n      return { ...state, test: action.payload }\n    case actionTypes.CURRENTMONTH:\n      return { ...state, month_data: getMonth(actionTypes.CURRENTMONTH) }\n    case actionTypes.PREVMONTH:\n      monthData = getMonth(actionTypes.PREVMONTH, action.payload);\n      return { ...state, current_month: monthData.index, month_data: monthData }\n    case actionTypes.NEXTMONTH:\n      monthData = getMonth(actionTypes.NEXTMONTH, action.payload);\n      return { ...state, current_month: monthData.index, month_data: monthData }\n    default:\n      return state;\n  }\n}","import * as actionTypes from '../actions/actionTypes';\nimport Moment from 'moment';\n\nconst INITIAL_STATE = {\n  reminder: [],\n  reminders_for_month: [],\n};\n\nfunction createReminder(payload) {\n  return {\n    uuid: payload.id,\n    date: payload.date,\n    text: payload.text,\n    dayIndex: payload.arrayIndex,\n    reminderColor: payload.reminderColor\n  }\n}\n\nfunction fetchReminder(state, payload) {\n  let newO = {};\n  state.reminder.find((reminder, index) => {\n    if (reminder.uuid === payload.id) {\n      newO = Object.assign({}, reminder, { index: index });\n      return newO;\n    }\n    return null;\n  })\n  return newO;\n}\n\nfunction fetchReminderPerMonth(state, month) {\n let array = [];\n  state.reminder.find((reminder, index) => {\n   if (reminder.date === month) {\n     return array.push(reminder);\n   }\n   return null;\n })\n return array;\n}\n\nexport function reminders(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case actionTypes.ADDREMINDER:\n      return { ...state, reminder: [...state.reminder, createReminder(action.payload)] }\n    case actionTypes.GETREMINDERS:\n      const month = Moment().month(action.payload).format('MMM');\n      let fetched = fetchReminderPerMonth(state, month);\n      return { ...state, reminders_for_month: fetched};\n    case actionTypes.EDITREMINDER:\n      let fetchedReminder = fetchReminder(state, action.payload);\n      let stateRemindersCopy = [...state.reminder];\n      stateRemindersCopy[fetchedReminder.index].text = action.payload.text\n      stateRemindersCopy[fetchedReminder.index].date = action.payload.date\n      stateRemindersCopy[fetchedReminder.index].reminderColor = action.payload.reminderColor\n      return { ...state }\n    case actionTypes.DELETEREMINDER:\n      return { ...state, text: action.payload }\n    default:\n      return state;\n  }\n}\n","import { combineReducers, createStore } from '../../../Library/Caches/typescript/2.9/node_modules/redux'\nimport * as reducers from './reducers';\n\nconst allReducers = combineReducers(reducers)\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n/**\n * Redux\n */\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}